// source: blockchain_region_param_v1.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.helium.RegionSpreading', null, global);
goog.exportSymbol('proto.helium.blockchain_region_param_v1', null, global);
goog.exportSymbol('proto.helium.blockchain_region_params_v1', null, global);
goog.exportSymbol('proto.helium.blockchain_region_spreading_v1', null, global);
goog.exportSymbol('proto.helium.tagged_spreading', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.helium.blockchain_region_params_v1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.helium.blockchain_region_params_v1.repeatedFields_, null);
};
goog.inherits(proto.helium.blockchain_region_params_v1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.helium.blockchain_region_params_v1.displayName = 'proto.helium.blockchain_region_params_v1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.helium.tagged_spreading = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.helium.tagged_spreading, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.helium.tagged_spreading.displayName = 'proto.helium.tagged_spreading';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.helium.blockchain_region_spreading_v1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.helium.blockchain_region_spreading_v1.repeatedFields_, null);
};
goog.inherits(proto.helium.blockchain_region_spreading_v1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.helium.blockchain_region_spreading_v1.displayName = 'proto.helium.blockchain_region_spreading_v1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.helium.blockchain_region_param_v1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.helium.blockchain_region_param_v1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.helium.blockchain_region_param_v1.displayName = 'proto.helium.blockchain_region_param_v1';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.helium.blockchain_region_params_v1.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.helium.blockchain_region_params_v1.prototype.toObject = function(opt_includeInstance) {
  return proto.helium.blockchain_region_params_v1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.helium.blockchain_region_params_v1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.blockchain_region_params_v1.toObject = function(includeInstance, msg) {
  var f, obj = {
    regionParamsList: jspb.Message.toObjectList(msg.getRegionParamsList(),
    proto.helium.blockchain_region_param_v1.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.helium.blockchain_region_params_v1}
 */
proto.helium.blockchain_region_params_v1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.helium.blockchain_region_params_v1;
  return proto.helium.blockchain_region_params_v1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.helium.blockchain_region_params_v1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.helium.blockchain_region_params_v1}
 */
proto.helium.blockchain_region_params_v1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.helium.blockchain_region_param_v1;
      reader.readMessage(value,proto.helium.blockchain_region_param_v1.deserializeBinaryFromReader);
      msg.addRegionParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.helium.blockchain_region_params_v1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.helium.blockchain_region_params_v1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.helium.blockchain_region_params_v1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.blockchain_region_params_v1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegionParamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.helium.blockchain_region_param_v1.serializeBinaryToWriter
    );
  }
};


/**
 * repeated blockchain_region_param_v1 region_params = 1;
 * @return {!Array<!proto.helium.blockchain_region_param_v1>}
 */
proto.helium.blockchain_region_params_v1.prototype.getRegionParamsList = function() {
  return /** @type{!Array<!proto.helium.blockchain_region_param_v1>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.helium.blockchain_region_param_v1, 1));
};


/**
 * @param {!Array<!proto.helium.blockchain_region_param_v1>} value
 * @return {!proto.helium.blockchain_region_params_v1} returns this
*/
proto.helium.blockchain_region_params_v1.prototype.setRegionParamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.helium.blockchain_region_param_v1=} opt_value
 * @param {number=} opt_index
 * @return {!proto.helium.blockchain_region_param_v1}
 */
proto.helium.blockchain_region_params_v1.prototype.addRegionParams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.helium.blockchain_region_param_v1, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.helium.blockchain_region_params_v1} returns this
 */
proto.helium.blockchain_region_params_v1.prototype.clearRegionParamsList = function() {
  return this.setRegionParamsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.helium.tagged_spreading.prototype.toObject = function(opt_includeInstance) {
  return proto.helium.tagged_spreading.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.helium.tagged_spreading} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.tagged_spreading.toObject = function(includeInstance, msg) {
  var f, obj = {
    regionSpreading: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxPacketSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.helium.tagged_spreading}
 */
proto.helium.tagged_spreading.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.helium.tagged_spreading;
  return proto.helium.tagged_spreading.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.helium.tagged_spreading} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.helium.tagged_spreading}
 */
proto.helium.tagged_spreading.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.helium.RegionSpreading} */ (reader.readEnum());
      msg.setRegionSpreading(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxPacketSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.helium.tagged_spreading.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.helium.tagged_spreading.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.helium.tagged_spreading} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.tagged_spreading.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegionSpreading();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMaxPacketSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional RegionSpreading region_spreading = 1;
 * @return {!proto.helium.RegionSpreading}
 */
proto.helium.tagged_spreading.prototype.getRegionSpreading = function() {
  return /** @type {!proto.helium.RegionSpreading} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.helium.RegionSpreading} value
 * @return {!proto.helium.tagged_spreading} returns this
 */
proto.helium.tagged_spreading.prototype.setRegionSpreading = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 max_packet_size = 2;
 * @return {number}
 */
proto.helium.tagged_spreading.prototype.getMaxPacketSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.helium.tagged_spreading} returns this
 */
proto.helium.tagged_spreading.prototype.setMaxPacketSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.helium.blockchain_region_spreading_v1.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.helium.blockchain_region_spreading_v1.prototype.toObject = function(opt_includeInstance) {
  return proto.helium.blockchain_region_spreading_v1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.helium.blockchain_region_spreading_v1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.blockchain_region_spreading_v1.toObject = function(includeInstance, msg) {
  var f, obj = {
    taggedSpreadingList: jspb.Message.toObjectList(msg.getTaggedSpreadingList(),
    proto.helium.tagged_spreading.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.helium.blockchain_region_spreading_v1}
 */
proto.helium.blockchain_region_spreading_v1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.helium.blockchain_region_spreading_v1;
  return proto.helium.blockchain_region_spreading_v1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.helium.blockchain_region_spreading_v1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.helium.blockchain_region_spreading_v1}
 */
proto.helium.blockchain_region_spreading_v1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.helium.tagged_spreading;
      reader.readMessage(value,proto.helium.tagged_spreading.deserializeBinaryFromReader);
      msg.addTaggedSpreading(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.helium.blockchain_region_spreading_v1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.helium.blockchain_region_spreading_v1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.helium.blockchain_region_spreading_v1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.blockchain_region_spreading_v1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaggedSpreadingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.helium.tagged_spreading.serializeBinaryToWriter
    );
  }
};


/**
 * repeated tagged_spreading tagged_spreading = 1;
 * @return {!Array<!proto.helium.tagged_spreading>}
 */
proto.helium.blockchain_region_spreading_v1.prototype.getTaggedSpreadingList = function() {
  return /** @type{!Array<!proto.helium.tagged_spreading>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.helium.tagged_spreading, 1));
};


/**
 * @param {!Array<!proto.helium.tagged_spreading>} value
 * @return {!proto.helium.blockchain_region_spreading_v1} returns this
*/
proto.helium.blockchain_region_spreading_v1.prototype.setTaggedSpreadingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.helium.tagged_spreading=} opt_value
 * @param {number=} opt_index
 * @return {!proto.helium.tagged_spreading}
 */
proto.helium.blockchain_region_spreading_v1.prototype.addTaggedSpreading = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.helium.tagged_spreading, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.helium.blockchain_region_spreading_v1} returns this
 */
proto.helium.blockchain_region_spreading_v1.prototype.clearTaggedSpreadingList = function() {
  return this.setTaggedSpreadingList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.helium.blockchain_region_param_v1.prototype.toObject = function(opt_includeInstance) {
  return proto.helium.blockchain_region_param_v1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.helium.blockchain_region_param_v1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.blockchain_region_param_v1.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelFrequency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bandwidth: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxEirp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    spreading: (f = msg.getSpreading()) && proto.helium.blockchain_region_spreading_v1.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.helium.blockchain_region_param_v1}
 */
proto.helium.blockchain_region_param_v1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.helium.blockchain_region_param_v1;
  return proto.helium.blockchain_region_param_v1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.helium.blockchain_region_param_v1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.helium.blockchain_region_param_v1}
 */
proto.helium.blockchain_region_param_v1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChannelFrequency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBandwidth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxEirp(value);
      break;
    case 4:
      var value = new proto.helium.blockchain_region_spreading_v1;
      reader.readMessage(value,proto.helium.blockchain_region_spreading_v1.deserializeBinaryFromReader);
      msg.setSpreading(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.helium.blockchain_region_param_v1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.helium.blockchain_region_param_v1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.helium.blockchain_region_param_v1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.helium.blockchain_region_param_v1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelFrequency();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBandwidth();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMaxEirp();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getSpreading();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.helium.blockchain_region_spreading_v1.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 channel_frequency = 1;
 * @return {number}
 */
proto.helium.blockchain_region_param_v1.prototype.getChannelFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.helium.blockchain_region_param_v1} returns this
 */
proto.helium.blockchain_region_param_v1.prototype.setChannelFrequency = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 bandwidth = 2;
 * @return {number}
 */
proto.helium.blockchain_region_param_v1.prototype.getBandwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.helium.blockchain_region_param_v1} returns this
 */
proto.helium.blockchain_region_param_v1.prototype.setBandwidth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 max_eirp = 3;
 * @return {number}
 */
proto.helium.blockchain_region_param_v1.prototype.getMaxEirp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.helium.blockchain_region_param_v1} returns this
 */
proto.helium.blockchain_region_param_v1.prototype.setMaxEirp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional blockchain_region_spreading_v1 spreading = 4;
 * @return {?proto.helium.blockchain_region_spreading_v1}
 */
proto.helium.blockchain_region_param_v1.prototype.getSpreading = function() {
  return /** @type{?proto.helium.blockchain_region_spreading_v1} */ (
    jspb.Message.getWrapperField(this, proto.helium.blockchain_region_spreading_v1, 4));
};


/**
 * @param {?proto.helium.blockchain_region_spreading_v1|undefined} value
 * @return {!proto.helium.blockchain_region_param_v1} returns this
*/
proto.helium.blockchain_region_param_v1.prototype.setSpreading = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.helium.blockchain_region_param_v1} returns this
 */
proto.helium.blockchain_region_param_v1.prototype.clearSpreading = function() {
  return this.setSpreading(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.helium.blockchain_region_param_v1.prototype.hasSpreading = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.helium.RegionSpreading = {
  SF_INVALID: 0,
  SF7: 1,
  SF8: 2,
  SF9: 3,
  SF10: 4,
  SF11: 5,
  SF12: 6
};

goog.object.extend(exports, proto.helium);
