# Logging configuration
[logging]
level = "info"
format = "json"

# Service configuration
[service]
polling_interval_seconds = 10
batch_size = 500
max_concurrent_publishes = 50
dry_run = true
dry_run_failure_rate = 0.0
port = 9090

# Database configuration
[database]
host = "localhost"
port = 5432
username = "postgres"
password = "postgres"
database_name = "postgres"
max_connections = 10
min_connections = 2
acquire_timeout_seconds = 60
idle_timeout_seconds = 700
max_lifetime_seconds = 1800

# Required tables that must exist before starting
required_tables = [
  "asset_owners",
  "key_to_assets",
  "recipients",
  "welcome_packs",
  "rewards_recipients",
  "mini_fanouts"
]

# Signing keypair settings
[signing]
keypair_path = "/usr/src/app/secrets/keypair.bin"  # Path to Helium keypair file (K8s Secret mount)

# Ingestor configuration
[ingestor]
endpoint = "http://localhost:8080"
timeout_seconds = 30
max_retries = 3
retry_delay_seconds = 2

[[service.polling_jobs]]
name = "atomic_mobile_hotspots"
query_name = "construct_atomic_hotspots"
parameters = { change_type = "mobile_hotspot", hotspot_type = "mobile" }

[[service.polling_jobs]]
name = "atomic_iot_hotspots"
query_name = "construct_atomic_hotspots"
parameters = { change_type = "iot_hotspot", hotspot_type = "iot" }

[[service.polling_jobs]]
name = "entity_ownership_changes"
query_name = "construct_entity_ownership_changes"
parameters = { change_type = "entity_ownership" }

[[service.polling_jobs]]
name = "entity_reward_destination_changes"
query_name = "construct_entity_reward_destination_changes"
parameters = { change_type = "entity_reward_destination" }

